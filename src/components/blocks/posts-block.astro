---
import gql from "graphql-tag";
import { request } from "../../lib/datocms/request";
import type {
  GlobalRecord,
  PostRecord,
  PostsBlockRecord,
} from "../../lib/datocms/types";
import { PostCard } from "../cards/post-card";
import { Container } from "../container";
import { PageBlock } from "../page-block";

export const fragment = gql`
  fragment PostsBlock on PostsBlockRecord {
    id
    title
  }
`;

const query = gql`
  query PostsBlock {
    global {
      postsPage {
        slug
      }
    }
    allPosts(orderBy: createdAt_DESC, first: 20) {
      ...PostCard
    }
  }

  ${PostCard.fragment}
`;

interface PostsBlockProps extends PostsBlockRecord {}

const { title } = Astro.props as PostsBlockProps;

const {
  allPosts: posts,
  global: {
    postsPage: { slug: postsPageSlug },
  },
} = await request<{ allPosts: PostRecord[]; global: GlobalRecord }>(query);
---

<PageBlock className="bg-yellow-50">
  <Container>
    <h2 class="mb-8 text-3xl text-center">{title}</h2>
    <ul class="-m-4 flex flex-wrap">
      {posts.map((post) => (
        <li class="w-full p-4 sm:w-1/2 lg:w-1/3">
          <a href={`/${postsPageSlug}/${post.slug}`}>
            <PostCard post={post} />
          </a>
        </li>
      ))}
    </ul>
  </Container>
</PageBlock>
