---
import cn from "classnames";
import gql from "graphql-tag";
import type { ContentBlockRecord } from "../../lib/datocms/types";
import { responsiveImageFragment,videoFragment } from "../../lib/fragments";
import { Body } from "../body";
import { BodyWithVideo } from "../body-with-video";
import { Container } from "../container";
import { PageBlock } from "../page-block";

export const fragment = gql`
  fragment ContentBlock on ContentBlockRecord {
    id
    columns {
      body {
        value
        blocks {
          __typename
          id
          media {
            responsiveImage(
              imgixParams: { w: 800, h: 600, auto: format }
            ) {
              ...ResponsiveImage
            }
            video {
              ...Video
            }
          }
        }
      }
    }
    centerText
    backgroundColor {
      hex
    }
  }
  ${responsiveImageFragment}
  ${videoFragment}
`;

interface ContentBlockProps extends ContentBlockRecord {}

const { id, columns, centerText, backgroundColor } =
  Astro.props as ContentBlockProps;
---

<PageBlock
  className={cn({ "bg-purple-200": !backgroundColor })}
  style={{ backgroundColor: backgroundColor?.hex }}
>
  <Container>
    <div class:list={["grid gap-8 text-center", { "md:text-start": !centerText, "md:grid-cols-2": columns.length > 1 }]}>
      {columns.map((column) => {
        const hasVideo = column.body?.blocks.some(({ media }) => media?.video);
        const body = column.body as any;
        return (
          <div>
            {
              hasVideo ? (
                <BodyWithVideo client:only="react" body={body} videoId={id} /> 
              ) : (
                <Body body={body} />
              )
            }
          </div>
        );
      })}
    </div>
  </Container>
</PageBlock>
