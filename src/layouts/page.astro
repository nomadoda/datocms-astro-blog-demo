---
import gql from "graphql-tag";
import ArtworksBlock, {
  fragment as ArtworksBlockFragment,
} from "../components/blocks/artworks-block.astro";
import LatestArtworksBlock, {
  fragment as LatestArtworksBlockFragment,
} from "../components/blocks/latest-artworks-block.astro";
import LatestPostsBlock, {
  fragment as LatestPostsBlockFragment,
} from "../components/blocks/latest-posts-block.astro";
import PostsBlock, {
  fragment as PostsBlockFragment,
} from "../components/blocks/posts-block.astro";
import Layout from "../layouts/layout.astro";
import type { PageRecord } from "../lib/datocms/types";
import { metaTagFragment } from "../lib/fragments";

export const fragment = gql`
  fragment Page on PageRecord {
    id
    title
    slug
    blocks {
      __typename
      ... on LatestPostsBlockRecord {
        ...LatestPostsBlock
      }
      ... on LatestArtworksBlockRecord {
        ...LatestArtworksBlock
      }
      ... on PostsBlockRecord {
        ...PostsBlock
      }
      ... on ArtworksBlockRecord {
        ...ArtworksBlock
      }
    }
    _seoMetaTags {
      ...MetaTag
    }
  }

  ${metaTagFragment}
  ${ArtworksBlockFragment}
  ${PostsBlockFragment}
  ${LatestPostsBlockFragment}
  ${LatestArtworksBlockFragment}
`;

interface PageProps {
  page: PageRecord;
}

const { page } = Astro.props as PageProps;
---

<Layout seo={page._seoMetaTags}>
  {page.blocks.map(({ __typename, ...block }) => {
    switch (__typename) {
      case "PostsBlockRecord":
        return <PostsBlock {...block} />;
      case "ArtworksBlockRecord":
        return <ArtworksBlock {...block} />;
      case "LatestPostsBlockRecord":
        return <LatestPostsBlock {...block} />;
      case "LatestArtworksBlockRecord":
        return <LatestArtworksBlock {...block} />;
      default:
        return null;
    }
  })}
</Layout>
